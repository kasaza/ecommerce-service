name: Ecommerce CI/CD to EKS

on:
  push:
    branches: [master]

env:
  AWS_REGION: eu-west-1
  EKS_CLUSTER: ecommerce-cluster
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  PYTHON_VERSION: 3.10

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Create Kubernetes secrets
        run: |
          kubectl create secret generic ecommerce-secrets \
            --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --from-literal=SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -